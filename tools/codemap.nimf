#? stdtmpl | standard
#proc generateCodemap(emojis: JsonNode, emojiCategories: OrderedTable[string, seq[string]]): string =
#  result = ""
discard """this file is automatically generated by tools\generate.nim
using source code filter tools\codemap.nimf, do not modify!"""
import strtabs, tables

const
  allowedChars* = {'a'..'z', 'A'..'Z', '0'..'9', '_', '-', '+', '(', ')', '.', '!'}

let
  emojiCodemap* = {
${emojis.toEntries}
  }.newStringTable(modeStyleInsensitive)

var
  emojiCategories* = initOrderedTable[string, seq[string]]()

#for category, keywords in emojiCategories:
emojiCategories["$category"] = ${keywords}
#end for

when isMainModule:
  for s in emojiCodemap.keys:
    for c in s:
      doAssert c in allowedChars, "pattern " & s & " has character " & c & " which is not allowed!"
  import nimoji
  doAssert "I :heart: :pizza: and :beer:".emojize == "I ‚ù§Ô∏è üçï and üç∫"
  doAssert "The emoji for ::spaghetti:: is :spaghetti:".emojize == "The emoji for :spaghetti: is üçù"
  doAssert "you say :to_ma_to:, I say :ToMaTo:".emojize == "you say üçÖ, I say üçÖ"
  
  echo emojiCodemap.len, " emojis in codemap."
  echo emojiCategories.len, " categories."
  var
    all = ""
    i = 0
  for category, keywords in emojiCategories:
    echo keywords.len, " emojis in category ", category, ":"
    for k in keywords:
      all.add emojiCodemap[k]
      inc i
      if i mod 32 == 0:
        all.add '\n'
    echo all
    all = ""
    i = 0
  echo "tests successful! :heart:".emojize
